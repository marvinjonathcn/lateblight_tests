seq.Date("1-01-1995", "1-02-1995", by = day)
detach("package:base", unload = TRUE)
library(base, lib.loc = "C:/Program Files/R/R-4.0.0/library")
install.packages("tidyverse")
version()
license()
r()
library(base64enc)
detach("package:base64enc", unload = TRUE)
library(devtools)
install.packages("revealjs")
library(revealjs)
df <- c(1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1)
y <- df
is.na(y) <- y == 0
ggplot(data = data.frame(x = seq_along(y), y), mapping = aes(x, y)) +
geom_point() +
scale_y_continuous(breaks = c(0, 1),
labels = c("0" = "0", "1" = "1"),
limits = c(0, 1))
library(ggplot2)
y <- df
is.na(y) <- y == 0
ggplot(data = data.frame(x = seq_along(y), y), mapping = aes(x, y)) +
geom_point() +
scale_y_continuous(breaks = c(0, 1),
labels = c("0" = "0", "1" = "1"),
limits = c(0, 1))
y <- df
is.na(y) <- y == 0
ggplot(data = data.frame(x = seq_along(y), y), mapping = aes(x, y)) +
geom_point() +
scale_y_continuous(breaks = c(0, 1),
labels = c("0" = " ", "1" = "APLICA"),
limits = c(0, 1))
y <- df
is.na(y) <- y == 0
ggplot(data = data.frame(x = seq_along(y), y), mapping = aes(x, y)) +
geom_point() +
scale_y_continuous(breaks = c(0, 1),
labels = c("0" = " ", "1" = "APPLY"),
limits = c(0, 1))
5 + 5
5 +5
sqrt(16)
sqrt(16)
sqrt(16)
sqrt(16)
5 + 5
View(df_merg[[2]][[1]])
ggplot(data = starwars, mapping = aes(x = height, y = mass, color = gender)) +
geom_point()
library(ggplot2)
ggplot(data = starwars, mapping = aes(x = height, y = mass, color = gender)) +
geom_point()
library(tidyverse)
ggplot(data = starwars, mapping = aes(x = height, y = mass, color = gender)) +
geom_point()
ggplot(data = starwars, mapping = aes(x = height, y = mass, color = gender)) +
geom_point(size = 2)
ggplot(data = starwars, mapping = aes(x = height, y = mass, color = gender)) +
geom_point(size = 5)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
head(starwars)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_grid(gender ~ .)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~. eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~. eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(.~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(.~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
dev.new()
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(.~ eye_color)
dev.new()
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
dev.new()
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid( ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid( ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(.~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_grid(.~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_grid(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
geom_point() +
facet_wrap(~ eye_color)
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(. ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(gender ~) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(gender ~.) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(gender ~ ) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid(gender ~ .) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid( ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid( .~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
ggplot(data = starwars, mapping = aes(x = height, y = mass)) +
facet_grid( ~ gender) +
geom_point() +
labs(title = "Mass vs. height of Starwars characters",
subtitle = "Faceted by gender",
x = "Height (cm)", y = "Weight (kg)")
install.packages("dismo")
ecocrop('potato', 5:16, 15:26, runif(12)*100)
library(dismo)
ecocrop('potato', 5:16, 15:26, runif(12)*100)
runif(12)*100
15:26
5:16
ecocrop('potato', 5:16, 15:26, runif(12)*100)
getCrop('Acacia brachystachya Benth.')
crop <- getCrop('Hot pepper')
View(crop)
ecocrop(crop, 5:16, 15:26, rainfed=FALSE)
sin(90)
sin(90*pi/180)
library(shiny)
library(shinyWidgets)
library(gridExtra)
library(png)
library(grid)
ui <- fluidPage(
titlePanel("Compare"),
sidebarLayout(
sidebarPanel(
pickerInput(inputId = "countyInput", label = "Filter county",
choices = c("County1", "County2", "County3", "County4", "County5"),
options = list(`actions-box` = TRUE,size = 10, `selected-text-format` = "count > 9"),
multiple = TRUE),
checkboxGroupInput(inputId = "reasonInput", label = "Filter reason",
choices = c("reason1", "reason2", "reason3"))
),
mainPanel(
plotOutput("plot")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
filename <- normalizePath(file.path("<path>", paste0(input$countyInput, " ", input$reasonInput, ".png", sep = ""))) # you had one extra space before .png
filename <- filename[file.exists(filename)]
pngs = lapply(filename, readPNG)
asGrobs = lapply(pngs, rasterGrob)
p <- grid.arrange(grobs=asGrobs, nrow = 1)
}, width = 1000)
}
library(shiny)
install.packages("shiny")
install.packages("shinyWidgets")
install.packages("gridExtra")
install.packages("png")
install.packages("grid")
library(shiny)
library(shinyWidgets)
library(gridExtra)
library(png)
library(grid)
ui <- fluidPage(
titlePanel("Compare"),
sidebarLayout(
sidebarPanel(
pickerInput(inputId = "countyInput", label = "Filter county",
choices = c("County1", "County2", "County3", "County4", "County5"),
options = list(`actions-box` = TRUE,size = 10, `selected-text-format` = "count > 9"),
multiple = TRUE),
checkboxGroupInput(inputId = "reasonInput", label = "Filter reason",
choices = c("reason1", "reason2", "reason3"))
),
mainPanel(
plotOutput("plot")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
filename <- normalizePath(file.path("<path>", paste0(input$countyInput, " ", input$reasonInput, ".png", sep = ""))) # you had one extra space before .png
filename <- filename[file.exists(filename)]
pngs = lapply(filename, readPNG)
asGrobs = lapply(pngs, rasterGrob)
p <- grid.arrange(grobs=asGrobs, nrow = 1)
}, width = 1000)
}
shinyApp(ui = ui, server = server)
install.packages("rJava")
library(rJava)
aWhereAPI::get_token(uid="1iiGfRRH9BewFNGw7tEOoRv13WbdgI7z", secret="8VSUKD8mrVUQ1gLd")
setwd("C:/Users/Asus/Documents/R/lateblight_tests/shiny-app/")
library(shiny)
library(shinydashboard)
library(shinycustomloader)
library(aWhereAPI)
library(DT)
library(gdata)
library(stringr)
library(lubridate)
library(DBI)
library(RMySQL)
library(DT)
library(maps)
library(ggmap)
library(ggplot2)
library(rgdal)
library(shinyTree)
library(dismo)
library(rJava)
library(RgoogleMaps)
library(stringr)
library(leaflet)
library(rsconnect)
library(shiny.i18n)
library(leaflet.extras)
library(data.table)
runApp()
runApp()
runApp()
Sys.Date()
Sys.Date()
aWhereAPI::daily_observed_latlng(latitude = -12,
longitude = 76,
day_start = "2020-08-09",
day_end = "2020-08-12")
aWhereAPI::daily_observed_latlng(latitude = -12,
longitude = -76,
day_start = "2020-08-09",
day_end = "2020-08-12")
runApp()
runApp()
runApp('C:/Users/Asus/Desktop/CIP-SIMCAST/GEOSIMCAST/SIMCAST-APP')
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/Asus/Desktop/CIP-SIMCAST/GEOSIMCAST/SIMCAST-APP')
runApp()
runApp()
shiny::runApp()
runApp()
